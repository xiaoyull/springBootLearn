server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      routes:
        - id: payment  # 路由id，没有固定的要求，但是必须唯一
          uri: lb://CLOUD-PAYMENT-SERVICE  #配置后提供服务的路由地址，这里通过微服务名称开启服务名
          predicates:
            - Path=/payment/get/** #断言（有很种断言，可以进行多个断言匹配，就是相当于多个条件&&的关系），路径匹配成功之后进行路由
            - After=2017-01-20T17:42:47.789-07:00[America/Denver] #这个可以在2017年1月20日17:42(丹佛)之后提出的任何请求
          filters: #可能我们一般不使用它，我们可能会使用一个全局的filters，
            - AddRequestHeader=X-Request-red, blue #这个清单为所有匹配请求的下游请求的头添加了 X-Request-red: blue 头
        - id: hystrix-payment
          uri: lb://CLOUD-PAYMENT-HYSTRIX-SERVICE
          predicates:
            - Path=/**
      discovery:
        locator:
          enabled: true #开启通过微服务名称访问访问，结合ribbon可以实现负载均衡的作用

eureka:
  client:
    fetchRegistry: true #是否从Eureka注册中心抓取已有的服务，默认是true，
    #但是集群必须是true才可以配合ribbon做负载均衡
    register-with-eureka: true #向eureka注册中心注册自己
    service-url: #eureka注册中心地址
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka #集群配置，往多个注册中心都注册
  instance:
    instance-id: gateway9527 #设置Eureka注册中心web页面中Status中名称
    prefer-ip-address: true # 是否显示ip地址
    lease-renewal-interval-in-seconds: 1 #Eureka客户端向服务端发送心跳的时间间隔，单位为秒(默认是30秒)
    lease-expiration-duration-in-seconds: 2 #Eureka服务端在收到最后一次心跳后等待时间上限，单位为秒(默认是90秒)，超时将剔除服务

